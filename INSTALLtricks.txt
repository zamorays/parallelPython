This is a try to get the principal tricks to install a parallel enviroment for examples showing here!
At least this works for UBUNTU 12.04 (i belive that for almost all linux distributions with pertinent considerations).

FIRTS: In many cases for get the latest distributions of python libraries, cuda libraries, opencl extensions, etc.
    its a good idea to use git distribution for manage all this packages.

    If you dont have git installed, type:

	USER$ sudo apt-get install git

    courisly, for get the latest git, you have to use git!. To get some repos to build in your PC only type:

	USER$ git clone http://git_disttribution_of_you_want

    Almost everything in git online repos has a good INSTALL documentation, the best part is that 
    generally include many examples.

SECOND: PYTHON ENVIROMENT. (I use Python 2.7.3)
    
    BASIC PYTHON LIBRARIES (easy way! & has update versions) (I dont remember thas was a lot!!!) (Be patient!)

    $ sudo apt-get install python-pip
    $ sudo pip install pip -U         (for upgrade, reset the terminat to reload bash)
    $ sudo pip install Sphinx         (Documentation)
    $ sudo pip install nose           (Test packages and builds, also our work)
    $ sudo apt-get install g++ gfortran
    $ sudo pip install pyparsing Pillow
    $ sudo apt-get install python-tk pyqtgraph (the last install scipy & numpy)
    $ sudo apt-get install python-wxtools python-gtk2-dev python-cxx
    
    NOT So Importants but interensting
    $ sudo apt-get install python-visual
    (Build Mayavi: http://docs.enthought.com/mayavi/mayavi/installation.html)
    
    IMPORTANTS
    $ sudo apt-get install python-dev (To install developer version)
    (bulid cython from: https://github.com/cython/cython or type: sudo pip install cython)
    $ sudo apt-get install libatlas-base-dev (Think is note necessary, but there are some other libraries that i think need it)
    $ sudo pip install numpy scipy matplotlib sympy  (I think that this dont require a special build on the system)
    
   
    
    
    IPYTHON: This is a new an exciting way to share with others the work done!
    
    Stable versionat day 1.1.0:
    git repo at: https://github.com/ipython/ipython/tree/rel-1.1.0

    Develop version 2.0: (Has some changes, in interfaz a lot!. I used and for me is stable):
    git repo at: https://github.com/ipython/ipython

    Bulding...
    
    Requiriments:
	USER/dir/to/ipython/repo$ python setup.py
	
	For me says:
	BUILDING IPYTHON
              python: 2.7.3 (default, Sep 26 2013, 20:03:06)  [GCC 4.6.3]
              platform: linux2

	OPTIONAL DEPENDENCIES
                sphinx: 1.2.1
              pygments: 1.6
                  nose: 1.3.0
               pexpect: 2.3
                 pyzmq: no (required for qtconsole, notebook, and parallel
                        computing capabilities)
               tornado: no (required for notebook)
              readline: yes
                jinja2: 2.7.2
                
      $ sudo pip install pyzmq tornado 
      
      Test if works:
      
      $ python -m IPython
      
      Install:
      
      $ sudo pip install -e ".[notebook]"
      
THIRD:  HARDEST PART!
    Now we install CUDA 5.5, the examples, OpenCL AMD, and the respective 
    python implementation.
    
    **** N V I D I A ****
    Install the driver: <Ctrl> + <F2> (dont forget save the work)
		       login...
		       $ sudo apt-get remove --purge nvidia* (Delete all previous nvidia stuff)
		       $ sudo service ligthmd stop
		       $ chmod +x cudavesion.run
		       $ sudo ./cudavesion.run
		       Accept the terms
		       $ sudo reboot
		       (I you has a prblem with nouveau driver: 
		       $ sudo echo nouveau >> /etc/modprobe.d/blacklist.conf)
		       Good luck!
    Now toolkit and Samples. Before install som libraries.

      $ sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev 
	libxi-dev libglu1-mesa-dev libglu1-mesa libglapi-mesa  libgl1-mesa-dri 
	libgl1-mesa-dev libgl1-mesa-glx
      $ sudo ln -s /usr/lib/x86_64-linux-gnu/libglut.so /usr/lib/libglut.so
      $ sudo apt-get install libcr-dev mpich2 mpich2-doc
      $ cd ~/NVIDIA_DISTR/
      $ make (wait and check for errors X) 
    **** O P E N C L **** 
    (In fact If you have Nvidia CARD OpenCL is installed with the previous part)
    We use AMD APP SDK.
    Get in AMD web page. And Build (so easy tu build and many examples)
    
FOUTH PART: Get pyCUDA and pyOpenCL
    Both of them are similar to build in our system.
    Get with :
    git clone --recursive http://git.tiker.net/trees/pycuda.git
    git clone --recursive http://git.tiker.net/trees/pyopencl.git
    
    $ sudo apt-get install opencl-headers
    
    In both run: $ ./configure 
    and in siteconf.py make true the GL optin to make amazing animations!
    
    Then install with
    
    $ make
    $ sudo make install (don forget to test your instalation with the code in /tests)
    
    At this moment i find that include files like cutil_inline.h disapear in CUDA 5.5 but are require 
    from pyCUDA, we just paste in the cuda 5.5 include files (cutil_inline.h and others can found in Cuda 4.2 SDK)
    
    I made to correct this:
    $ sudo cp cutil* /usr/local/cuda-5.5/include/ (I have previous SDK in my HOME, UFF!)
    $ sudo cp drvapi_error_string.h /usr/local/cuda-5.5/include/
    
OTHERS INTERESTING LIBRARIES:
    PYOPENCL:
    $ sudo pip install PyOpenGL PyOpenGL_accelerate
    $ sudo apt-get install python-pyglew
    
    PYFFT: $ sudo easy_install pyfft
    MAKO $ sudo pip install Mako
    REIKNA: $python setup.py build
	    $sudo make install
    PYCULA: Try it but CULA is not Free
    SCIKIT CUDA: CUBLAS & CUFFT extensions
    MPI4PY: $ sudo apt-get install mpi-default-dev
	    Build from $ git clone https://bitbucket.org/mpi4py/mpi4py.git
    H5PY:
	$ sudo apt-get install libhdf5-mpich-developer
	$ sudo apt-get install libhdf5-serial-dev
	$ git clone https://github.com/h5py/h5py.git
	h5pyDIR $ python setup.py build
	h5pyDIR $ sudo python setup.py install


    MAYAVI:
      sudo apt-get install python-vtk
      sudo apt-get install python-wxgtk2.6
      sudo apt-get install python-setuptools
      sudo apt-get install python-configobj
      sudo apt-get install python-traits
      sudo apt-get install python-envisage
      sudo easy_install "Mayavi[app]"
      if wx problems:
      sudo apt-get remove --purge python-wxgtk2.6 libwxgtk2.6-0
      sudo apt-get install python-wxversion --reinstall
      sudo apt-get install python-traitsui
      sudo apt-get install python-apptools

      
      WELL i think is all!! 